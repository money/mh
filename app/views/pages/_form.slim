.row.mt-3
  = form_for @page, html: { class: 'col-8 offset-2' } do |f|
    .form-group.row
      = f.collection_radio_buttons(:layout, Page::LAYOUT, :first, :last, checked: (@page.layout || 'default')) do |layout|
        .col-6.text-center.bg-gradient-dark.text-white.p-3
          .clearfix= layout.label { image_tag("#{layout.text}.png", width: '200px') }
          .text-center= layout.label { layout.radio_button + ' ' + layout.text.humanize }
      hr.col
    .form-group.row
      .col-6
        .lead.mt-5.pt-5
          = f.label :image, 'Upload image (1280px X 400px)'
        = f.file_field :image, class: 'form-control-file'
      .col-6.text-center
        = image_tag 'page_layout.png', width: '50%'
      hr
        - if @page.image.present?
          - cache @page.image do
            = image_tag @page.image, height: '200'
    .bg-light.p-3
      .form-group
        = f.label :position
        = f.number_field :position, value: @page.position,
                                    class: 'form-control', min: 0, max: 10,
                                    placeholder: 'Navigable state page must have position'
      .form-group
        = f.text_field :title, placeholder: 'Page Title', class: 'form-control'
      .form-group
        = f.label :aasm_state, 'Choose state'
        = f.select :aasm_state, Page.aasm.states.map(&:name),
          value: @page.aasm_state, class: 'form-control'
      .form-group
        = f.text_field :content, placeholder: 'Page content', class: 'form-control'
    - if @page.sections.any?
      hr.col
      .sections.shadow
        h1.col-12.text-center Sections
        .form-group
          = f.fields_for :sections do |sf|
            div.col-12.p-3 class=cycle('bg-gradient-light', 'bg-white')
              = render partial: 'sections/section_fields', locals: { f: sf }
              .form-group
                  .col-2.offset-10.text-right.p-0
                    = link_to 'edit cards', edit_section_path(sf.object.id, cards_size: sf.object.cards.size),
                      class: 'btn btn-outline-success'
                  - sf.object.cards.each do |card|
                    - if card.image.present?
                      - cache card.image do
                        = image_tag card.image

    = f.submit class: 'btn btn-primary'
